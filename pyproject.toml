[project]
name = "cs-master-agent"
version = "0.0.1"
description = "CS Master Agent."
authors = [
    { name = "정현우", email = "smartcow.jung@gmail.com" },
]
readme = "README.md"

requires-python = ">=3.11"
dependencies = [
    "langgraph-cli >=0.3.3",
    "langgraph>=0.2.6",
    "langgraph-api>=0.2.78",
    "python-dotenv>=1.0.1",
    "langchain-community",
    "langchain-qdrant",
    "langchain-google-genai",
    "qdrant-client",
]


[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1"]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph.templates.parsing_graph", "parsing_graph"]

[tool.setuptools.package-dir]
"langgraph.templates.parsing_graph" = "src/parsing_graph"
"parsing_graph" = "src/parsing_graph"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "langgraph-cli[inmem]>=0.2.8",
    "mypy>=1.13.0",
    "pytest>=8.3.5",
    "ruff>=0.8.2",
]
